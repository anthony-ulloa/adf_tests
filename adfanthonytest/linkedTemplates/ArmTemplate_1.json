{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfanthonytest"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "source1",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "sourcefile",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Region as string,",
						"          Country as string,",
						"          {Item Type} as string,",
						"          {Sales Channel} as string,",
						"          {Order Priority} as string,",
						"          {Order Date} as string,",
						"          {Order ID} as string,",
						"          {Ship Date} as string,",
						"          {Units Sold} as string,",
						"          {Unit Price} as string,",
						"          {Unit Cost} as string,",
						"          {Total Revenue} as string,",
						"          {Total Cost} as string,",
						"          {Total Profit} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          Region as string,",
						"          Country as string,",
						"          {Item Type} as string,",
						"          {Sales Channel} as string,",
						"          {Order Priority} as string,",
						"          {Order Date} as string,",
						"          {Order ID} as string,",
						"          {Ship Date} as string,",
						"          {Units Sold} as string,",
						"          {Unit Price} as string,",
						"          {Unit Cost} as string,",
						"          {Total Revenue} as string,",
						"          {Total Cost} as string,",
						"          {Total Profit} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source1 derive(each(match(type=='double'), $$ = round($$,2))) ~> derivedColumn1",
						"derivedColumn1 derive(each(match(type=='double'), $$ = round($$,2))) ~> derivedColumn2",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Region as string,",
						"          Country as string,",
						"          {Item Type} as string,",
						"          {Sales Channel} as string,",
						"          {Order Priority} as string,",
						"          {Order Date} as string,",
						"          {Order ID} as string,",
						"          {Ship Date} as string,",
						"          {Units Sold} as string,",
						"          {Unit Price} as string,",
						"          {Unit Cost} as string,",
						"          {Total Revenue} as string,",
						"          {Total Cost} as string,",
						"          {Total Profit} as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"source2 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink2"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "dataflowfiletest"
									},
									"source2": {
										"fileName": "dataflowfiletest"
									},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-14T21:31:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}